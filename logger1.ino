//-------------------------------- Libraries -----------------------------------
#include <SD.h>                     // подключаем библиотеку для работы sd-card reader
#include <SPI.h>                    // подключаем библиотеку для работы шины SPI
#include <LiquidCrystal_I2C.h>      // подключаем библиотеку для работы с дисплеем https://www.arduino.cc/reference/en/libraries/liquidcrystal-i2c/ 
#include <Wire.h>                   // подключаем библиотеку "Wire" - Стандартная библиотека
#include <GyverMAX6675_SPI.h>       // подключаем библиотеку для работы c термопарой https://github.com/GyverLibs/GyverMAX6675
#include <GyverGFX.h>               // подключаем библиотеку для работы графики дисплея https://github.com/GyverLibs/GyverGFX
#include <microDS3231.h>            // подключаем библиотеку для работы с RTC модулем https://github.com/GyverLibs/microDS3231
//-------------------------------- Libraries -----------------------------------

//-------------------------------- ОБЪЯВЛЕНИЕ ПОРТОВ -----------------------------------
#define PIN_CHIP_SELECT 7           // Порт, на котором CD - карта
#define PIN_BUTTON_SET  2           // указываем номер вывода arduino, к которому подключена кнопка SET
#define PIN_BUTTON_UP   3           // указываем номер вывода arduino, к которому подключена кнопка UP
#define PIN_BUTTON_DOWN 4           // указываем номер вывода arduino, к которому подключена кнопка DOWN
//-------------------------------- ОБЪЯВЛЕНИЕ ПОРТОВ -----------------------------------

//-------------------------------- НАСТРОЙКА МОДУЛЕЙ -----------------------------------
MicroDS3231 rtc;;                        // объявляем  переменную для работы с RTC модулем,  указывая название модуля
LiquidCrystal_I2C lcd(0x27, 16, 2);      // put your pin numbers here
GyverMAX6675_SPI<10> sens;               // программный SPI

#define MAX6675_SPI_SPEED 300000         // для увеличения качества связи по длинным проводам

char cel[]={'\1', 67, '\0'};             // Создание символа Градусов Цельсия
//-------------------------------- НАСТРОЙКА МОДУЛЕЙ -----------------------------------

//-------------------------------- ОБЪЯВЛЕНИЕ ГЛОБАЛЬНЫХ ПЕРЕМЕННЫХ -----------------------------------
unsigned long t;                         //Создание глобальной переменной для времени
//-------------------------------- ОБЪЯВЛЕНИЕ ГЛОБАЛЬНЫХ ПЕРЕМЕННЫХ -----------------------------------


void setup() {
  Serial.begin(9600);                    // Открываем порт для монитора порта
  lcd.init();                            // Инициализация дисплея
  
  if (sens.readTemp()) {                 // Читаем температуру
    Serial.println("Successful");        // Успешно - выводим лог
    lcd.print("Init successful");        // Успешно - выводим на дисплей
  } 
  else {
    Serial.println("Error");             // ошибка чтения или подключения - выводим лог
    lcd.print("Init failed");            // Ошибка - выводим на дисплей
  }
  delay(1500);                           // Ждем 1,5 секунды
  lcd.clear();                           // Очищаем дисплей
}

void loop() {
  if(millis()%1000==0){                      // Каждую секунду
      lcd.setCursor(0, 0);                   // устанавливаем курсор в позицию: столбец 0, строка 0
      lcd.print(rtc.getTimeString());        // выводим время
      lcd.setCursor(0, 1);                   // устанавливаем курсор в позицию: столбец 0, строка 1
      lcd.print(sens.getTemp());             // выводим температуру
      lcd.setCursor(5, 1);                   // устанавливаем курсор в позицию: столбец 5, строка 1
      lcd.print(cel);                        // выводим значок градуса
      Serial.println(rtc.getTimeString() + "          Temp: " + sens.getTemp() + " ºC"); // Отслеживание параметров в мониторе порта
  }
}
